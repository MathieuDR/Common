name: .NET

on:
  push:
    branches: [ main ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Verify commit exists in origin/main
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/main
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      # Cache nuget packages
      - name: Caching packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --configuration Release --no-restore /p:Version=${VERSION}
      
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal --logger trx --results-directory "TestResults" /p:Version=${VERSION}

      - name: Pack
        run: dotnet pack --no-build --configuration Release /p:Version=${VERSION}

      #Upload my results  
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-test-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Push
        run: dotnet nuget push MathieuDR.Common.${VERSION}.nupkg --sourcehttps://api.nuget.org/v3/index.json --api-key ${NUGET_TOKEN}
        env:
          GITHUB_TOKEN: ${{ secrets.NUGET_TOKEN }}